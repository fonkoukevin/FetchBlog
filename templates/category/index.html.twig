{# templates/category/index.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Categories{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        @import url('https://maxcdn.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css');

        /* Modal styling */
        .modal-header {
            background-color: #007bff;
            color: white;
            border-bottom: 1px solid #dee2e6;
            border-radius: 0.3rem 0.3rem 0 0;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .modal-body {
            padding: 2rem;
            background-color: #f8f9fa;
        }

        .modal-footer {
            border-top: 1px solid #dee2e6;
            border-radius: 0 0 0.3rem 0.3rem;
        }

        .btn-close {
            background: transparent;
            border: none;
            color: white;
            opacity: 1;
            font-size: 1.2rem;
        }

        .btn-secondary, .btn-success, .btn-primary {
            border: none;
        }

        .modal.fade .modal-dialog {
            transition: transform .3s ease-out;
            transform: translateY(-50px);
        }

        .modal.show .modal-dialog {
            transform: translateY(0);
        }

        /* Form styling */
        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            font-weight: bold;
        }

        .form-check {
            margin-bottom: 0.5rem;
        }

        .form-check-label {
            margin-left: 0.3rem;
        }

        /* Posts styling */
        .post-list {
            max-height: 200px;
            overflow-y: auto;
            padding: 0;
            margin: 0;
            list-style-type: none;
        }

        .post-list .form-check {
            display: flex;
            align-items: center;
        }

        .post-list .form-check-label {
            margin-left: 0.5rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
{% endblock %}

{% block body %}

        <div class="container mt-5">
            <h1>Categories</h1>

            <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                Add New Category
            </button>

            <!-- Modal -->
            <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            {{ form_start(form, { 'attr': { 'id': 'categoryForm' }, 'action': path('app_category'), 'method': 'POST' }) }}
                            <div class="form-group">
                                {{ form_label(form.name) }}
                                {{ form_widget(form.name, { 'attr': { 'class': 'form-control' } }) }}
                            </div>
                            <div class="form-group">
                                {{ form_label(form.posts) }}
                                <div class="post-list">
                                    {% for post in form.posts %}
                                        <div class="form-check">
                                            {{ form_widget(post) }}
                                            {{ form_label(post) }}
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                            {{ form_end(form) }}
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-success" id="saveCategoryBtn">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>

            <ul class="category-list">
                {% for category in categories %}
                    <li class="category-item" id="category-{{ category.id }}">
                        <strong>{{ category.name }}</strong>
                        <ul class="post-list">
                            {% for post in category.posts %}
                                <li class="post-item">{{ post.title }}</li>
                            {% endfor %}
                        </ul>
                        <a href="{{ path('app_category_edit', { id: category.id }) }}" class="btn btn-primary btn-sm">Edit</a>
                        <button class="btn btn-danger btn-sm delete-category-btn" data-id="{{ category.id }}">Delete</button>
                    </li>
                {% endfor %}
            </ul>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const modal = document.getElementById('addCategoryModal');
                const form = document.getElementById('categoryForm');
                const saveButton = document.getElementById('saveCategoryBtn');

                saveButton.addEventListener('click', (event) => {
                    event.preventDefault();
                    form.submit();
                });

                document.querySelectorAll('.delete-category-btn').forEach(button => {
                    button.addEventListener('click', (event) => {
                        const categoryId = button.getAttribute('data-id');
                        if (confirm('Are you sure you want to delete this category?')) {
                            fetch(`/category/delete/${categoryId}`, {
                                method: 'DELETE',
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest',
                                    'Content-Type': 'application/json'
                                }
                            })
                                .then(response => {
                                    if (response.ok) {
                                        document.getElementById(`category-${categoryId}`).remove();
                                    } else {
                                        alert('Failed to delete the category.');
                                    }
                                });
                        }
                    });
                });
            });
        </script>


{% endblock %}
